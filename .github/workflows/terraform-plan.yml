name: 'Terraform Plan'
##on:
#  - pull_request
on: [workflow_dispatch]

# Terraform for Dev Environment
jobs:
  validate-terraform:
    name: 'Terraform plan'
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest

    steps:
      - run: echo Working on ${{github.ref}} branch

      - name: Checkout GitHub Actions
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v1.2.1
        with:
          terraform_version: 1.0.9
          terraform_wrapper: false

      - name: Terraform Format
        id: fmt
        run: |
          terraform fmt -check
        working-directory: '.'

# Terraform Init, Validate, and Plan for Dev Environment
      - name: Terraform Init
        id: tf_init_dev
        run: |
          terraform init \
            -reconfigure \
            -backend-config="storage_account_name=${{ secrets.DEV_STORAGE_ACCOUNT_NAME }}" \
            -backend-config="container_name=${{ secrets.DEV_STORAGE_CONTAINER_NAME }}" \
            -backend-config="key=terraform.tfstate" \
            -backend-config="access_key=${{ secrets.DEV_STORAGE_ACCESS_KEY }}"
        if: github.ref == 'refs/heads/dev'
        working-directory: '.'

      - name: Terraform Validate
        id: tf_validate_dev
        run: |
          terraform validate -no-color
        if: github.ref == 'refs/heads/dev'
        working-directory: '.'

      - name: Terraform Plan
        id: tf_plan_dev
        run: |
          export TF_VAR_client_id=${{ secrets.DEV_ARM_CLIENT_ID }}
          export TF_VAR_client_secret=${{ secrets.DEV_ARM_CLIENT_SECRET }}
          export TF_VAR_tenant_id=${{ secrets.DEV_ARM_TENANT_ID }}
          export TF_VAR_subscription_id=${{ secrets.DEV_ARM_SUBSCRIPTION_ID }}
          export TF_VAR_admin_login=${{ secrets.DEV_PSQL_ADMINISTRATOR_LOGIN_PASSWORD }}
          export TF_VAR_administrator_login_password=${{ secrets.DEV_PSQL_ADMIN_LOGIN }}
          terraform plan --var-file=terraform-dev.tfvars -no-color
        if: github.ref == 'refs/heads/dev'
        working-directory: '.'

# Terraform Init, Validate, and Plan for Stg Environment
      - name: Terraform Init
        id: tf_init_stg
        run: |
          terraform init \
            -reconfigure \
            -backend-config="storage_account_name=${{ secrets.STG_STORAGE_ACCOUNT_NAME }}" \
            -backend-config="container_name=${{ secrets.STG_STORAGE_CONTAINER_NAME }}" \
            -backend-config="key=terraform.tfstate" \
            -backend-config="access_key=${{ secrets.STG_STORAGE_ACCESS_KEY }}"
        if: github.ref == 'refs/heads/stg'
        working-directory: '.'

      - name: Terraform Validate
        id: tf_validate_stg
        run: |
          terraform validate -no-color
        if: github.ref == 'refs/heads/stg'
        working-directory: '.'

      - name: Terraform Plan
        id: tf_plan_stg
        run: |
          export TF_VAR_client_id=${{ secrets.STG_ARM_CLIENT_ID }}
          export TF_VAR_client_secret=${{ secrets.STG_ARM_CLIENT_SECRET }}
          export TF_VAR_tenant_id=${{ secrets.STG_ARM_TENANT_ID }}
          export TF_VAR_subscription_id=${{ secrets.STG_ARM_SUBSCRIPTION_ID }}
          export TF_VAR_admin_login=${{ secrets.STG_PSQL_ADMINISTRATOR_LOGIN_PASSWORD }}
          export TF_VAR_administrator_login_password=${{ secrets.STG_PSQL_ADMIN_LOGIN }}
          terraform plan --var-file=terraform-stg.tfvars -no-color
        if: github.ref == 'refs/heads/stg'
        working-directory: '.'

# Terraform Init, Validate, and Plan for Prod Environment
      - name: Terraform Init
        id: tf_init_prod
        run: |
          terraform init \
            -reconfigure \
            -backend-config="storage_account_name=${{ secrets.PROD_STORAGE_ACCOUNT_NAME }}" \
            -backend-config="container_name=${{ secrets.PROD_STORAGE_CONTAINER_NAME }}" \
            -backend-config="key=terraform.tfstate" \
            -backend-config="access_key=${{ secrets.PROD_STORAGE_ACCESS_KEY }}"
        if: github.ref == 'refs/heads/prod'
        working-directory: '.'

      - name: Terraform Validate
        id: tf_validate_prod
        run: |
          terraform validate -no-color
        if: github.ref == 'refs/heads/prod'
        working-directory: '.'

      - name: Terraform Plan
        id: tf_plan_prod
        run: |
          export TF_VAR_client_id=${{ secrets.PROD_ARM_CLIENT_ID }}
          export TF_VAR_client_secret=${{ secrets.PROD_ARM_CLIENT_SECRET }}
          export TF_VAR_tenant_id=${{ secrets.PROD_ARM_TENANT_ID }}
          export TF_VAR_subscription_id=${{ secrets.PROD_ARM_SUBSCRIPTION_ID }}
          export TF_VAR_admin_login=${{ secrets.PROD_PSQL_ADMINISTRATOR_LOGIN_PASSWORD }}
          export TF_VAR_administrator_login_password=${{ secrets.PROD_PSQL_ADMIN_LOGIN }}
          terraform plan --var-file=terraform-prod.tfvars -no-color
        if: github.ref == 'refs/heads/prod'
        working-directory: '.'